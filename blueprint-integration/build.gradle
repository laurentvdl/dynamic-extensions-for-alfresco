allprojects {
    apply plugin: "java"
    apply plugin: 'biz.aQute.bnd.builder'

    configurations {
        testCompile.extendsFrom(compileOnly)
    }
}
def extender = 'org.eclipse.gemini.blueprint.extender'

subprojects { p ->
    jar {
        bnd(
                'Bundle-SymbolicName': p.group+'.'+p.name,
                'Fragment-Host': extender,
                'DynamicImport-Package': '*',
                'Export-Package': 'com.github.dynamicextensionsalfresco.blueprint.*',
                'Import-Package': '*',
                'Bundle-DocURL': 'https://github.com/xenit-eu/dynamic-extensions-for-alfresco',
        )
    }
}

jar {
    bnd(
            'Bundle-SymbolicName': project.group+'.'+project.name,
            'Fragment-Host': extender,
            'DynamicImport-Package': '*',
            'Export-Package': 'com.github.dynamicextensionsalfresco.blueprint',
            'Import-Package':
                    // We remove version dependencies on some gemini blueprint packages here,
                    // because they are different for alfresco 5.x and 6.x (see geminiVersion in the root build.gradle)
                    // This bundle is shared between those versions, and it should always be able to find some version to import.
                    'org.eclipse.gemini.blueprint.context;version=!,' +
                    'org.eclipse.gemini.blueprint.context.support;version=!,' +
                    'org.eclipse.gemini.blueprint.service.exporter.support;version=!,' +
                    '*',
            'Bundle-DocURL': 'https://github.com/xenit-eu/dynamic-extensions-for-alfresco',
    )
}
dependencies {
    compileOnly platform("${project.ext.alfrescoBom}")

    compile project(":annotations-runtime")
    compile project(':annotations-runtime:scheduler-quartz-1')
    compile project(':annotations-runtime:scheduler-quartz-2')

    compile project(':blueprint-integration:blueprint-integration-spring-3')
    compile project(':blueprint-integration:blueprint-integration-spring-5')

    compile project(":alfresco-integration")

    compileOnly("org.alfresco.surf:spring-webscripts")
    compileOnly("org.alfresco:alfresco-repository")

    compileOnly "org.osgi:org.osgi.core:${project.ext.osgiVersion}"

    compileOnly("org.eclipse.gemini.blueprint:gemini-blueprint-extender:${project.ext.geminiVersion}") {
        exclude group: "org.springframework"
    }

    compileOnly "javax.servlet:servlet-api:${project.ext.servletVersion}"
    compileOnly "com.springsource.util:com.springsource.util.osgi:${project.ext.springOsgiUtilVersion}"
    compile project(":event-bus")

    compileOnly "org.jetbrains:annotations:$jetbrains_annotations_version"


    testCompile platform("${project.ext.alfrescoBom}")

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile "org.mockito:mockito-core:${project.ext.mockitoVersion}"
    testCompile "junit:junit:${project.ext.junitVersion}"
    testCompile('org.springframework:spring-beans') { transitive = false }
}
